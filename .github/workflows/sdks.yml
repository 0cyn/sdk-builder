# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: SDKs

on:
  push:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        version:
          - "15.5"
          - "15.4"
          - "15.3"
          - "15.2"
          - "15.1"
          - "15.0"
          - "14.8"
          - "14.7.1"
          - "14.7"
          - "14.6"
          - "14.5.1"
          - "14.5"
          - "14.4"
          - "14.3"
          - "14.2"
          - "14.1"
          - "14.0.1"
          - "14.0"
          - "13.7"
          - "13.5"
          - "13.3"
          - "13.2"
          - "13.1"
          - "13.0"

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9.5'
    - name: Install blacktop/ipsw
      run: |
        brew update
        brew install blacktop/tap/ipsw
    - name: Set up python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install progressbar2 dyldextractor
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        git clone https://github.com/cxnder/ktool.git && cd ktool && ./dev_install.sh
    - name: Building SDK
      run: |
        python3 sdkgen.py ${{ matrix.version }}
    - name: Compressing Artifact
      run: | 
        zip -r SDK.zip ${{ matrix.version }}.extracted
    - name: Upload Zipped SDK
      uses: actions/upload-artifact@v2.2.4
      with:
        name: ${{ matrix.version }}-SDK.zip
        path: SDK.zip


  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Create Release          # create a new release v1
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 1.3.0
          release_name: ktool 1.3.0 | iOS 13.0-15.5 SDKs
          draft: false
          prerelease: false
      - name: Attach binaries to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          assets=()
          for asset in ./*; do               #loop the assets in the bin folder
            if [ -d "$asset" ]
            then
              zip -r $asset.zip $asset/
              assets+=("-a" "$asset.zip")
            fi
          done
          hub release edit "${assets[@]}" -m "iOS 13.0-15.5 SDKs" "1.3.0"