# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: SDKs

on:
  push:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        version:
          - "15.5"
          - "15.4"
          - "15.2"
          - "15.0"
          - "14.5"
          - "14.4"
          - "14.3"
          - "14.2"
          - "14.1"
          - "14.0"
          - "13.7"
          - "13.6"
          - "13.5"
          - "13.4"
          - "13.2"
          - "13.1"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install blacktop/ipsw                             # Blacktop's brew tap doesn't support Linux currently
      run: |
        git clone https://github.com/blacktop/ipsw
        cd ipsw
        curl -L https://github.com/blacktop/ipsw/releases/latest/download/ipsw_"$(git describe --tags $(git rev-list --tags --max-count=1) | cut -c2-)"_linux_x86_64.deb -o ipsw.deb
        sudo dpkg -i ipsw.deb
        cd
    - name: Install apfs-fuse
      run: |
        sudo apt update && sudo apt install -y libfuse3-dev
        git clone --recursive https://github.com/sgan81/apfs-fuse
        cd apfs-fuse
        mkdir build && cd build
        cmake ../
        make -j$(nproc --all) install
        cd
    - name: Set up python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install progressbar2 dyldextractor poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        git clone https://github.com/cxnder/ktool.git && cd ktool && chmod +x dev_install.sh && ./dev_install.sh
    - name: Build SDK
      run: |
        python3 sdkgen.py ${{ matrix.version }}
    - name: Prep SDK for artifact upload
      run: |
        mv ${{ matrix.version }}.extracted iPhoneOS${{ matrix.version }}.sdk
        zip -9 -r iPhoneOS${{ matrix.version }}.sdk.zip iPhoneOS${{ matrix.version }}.sdk
    - name: Upload SDK artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.version }}-Container
        path: iPhoneOS${{ matrix.version }}.sdk.zip


  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Extract SDKs from artifacts                     # SDKs get put into artifact-named directories by the artifact actions
        run: |
          set -x
          mkdir sdks/
          for container in ./*Container; do
            if [[ -d "$container" ]]; then
              mv $container/*.zip sdks/                       # Note: for some reason you can't cd into the artifact dirs?!
            fi
          done

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 1.4.0
          release_name: iOS 13.0-15.5 SDKs
          draft: false
          prerelease: false
      - name: Attach SDKs to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          sdks=()
          for sdk in sdks/*.zip; do
            sdks+=("-a" "$sdk")
          done
          hub release edit "${sdks[@]}" -m "iOS 13.0-15.5 SDKs" "1.4.0"
